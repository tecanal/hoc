{
    "lessons": [
        {
            "name": "What is Code?",
            "blocks": [
                {
                    "type": "h1",
                    "content": "What is Code?"
                },
                {
                    "type": "p",
                    "content": "Code is a way to write a step-by-step guide for the computer to do what you (the programmer) want to do. As you may or may not know, code is not written in plain, human English. Instead, they are written in <b>programming languages</b>. Just like out in the world, there are many different programming languages. The language that you will be learning throughout the next hour is called <b>JavaScript</b>."
                },
                {
                    "type": "p",
                    "content": "The code you see in the editor right now consists of four <b>functions</b>. A <b>function</b> is a name that correspond to a chunk of code that does a certain task."
                },
                {
                    "type": "p",
                    "content": "<b>fill()</b> sets the color of a tile at the given (x, y) coordinate. <b>setFillColor()</b> does exactly that it sounds like, it sets the fill color that the <b>fill()</b> function uses. When creating functions, programmers like you need to choose <i>descriptive</i> names so that other people know what's going on."
                },
                {
                    "type": "p",
                    "content": "Most of the time, but not always, functions expect values called <b>parameters</b>. These are important pieces of data that allow the function to do the work it was designed to do. In the case of the <b>fill()</b> function, it takes a Number parameter <i>x</i> and a Number parameter <i>y</i>."
                },
                {
                    "type": "h2",
                    "content": "Your Task"
                },
                {
                    "type": "p",
                    "content": "Your task for this level is just to hit the Run Code button to see the code in action."
                }
            ]
        },
        {
            "name": "Variables",
            "blocks": [
                {
                    "type": "h1",
                    "content": "Variables"
                },
                {
                    "type": "p",
                    "content": "Think of a variable as a labeled container that can hold different kinds of things. Instead of holding food or clothes, variables hold data. Just as there are different types of containers, there are different types of variables. You <i>create</i> a variable, and <i>assign</i> it a value."
                },
                {
                    "type": "p",
                    "content": "In JavaScript, you use the <b>let</b> keyword to define a variable."
                },
                {
                    "type": "code",
                    "content": "let thisIsTheVariableName = \"JavaScript is cool.\";"
                },
                {
                    "type": "p",
                    "content": "JavaScript is dynamically typed, which means that a variable with the same name can change the type of data at any moment during the program's runtime. With some other languages, you have to write the type when you create the variable, but JavaScript's system is much more flexible. Below are the basic types in JavaScript, but we will mostly be using Numbers, Strings, and Booleans during this hour."
                },
                {
                    "type": "code",
                    "content": "let myVariable = 5; // Number\nmyVariable = \"blah\"; // String\nmyVariable = false; // Boolean\nmyVariable = [1, 2, 3]; // Array"
                },
                {
                    "type": "h2",
                    "content": "Your Task"
                },
                {
                    "type": "p",
                    "content": "Your task for this level is to create a variable called <i>myFavoriteColor</i> and use <b>setFillColor()</b> and <b>fill()</b> to color the tile at (0, 1) to be your favorite color. For the purpose of this activity, choose between the following colors:"
                },
                {
                    "type": "ul",
                    "blocks": [
                        {
                            "type": "li",
                            "content": "red"
                        },
                        {
                            "type": "li",
                            "content": "green"
                        },
                        {
                            "type": "li",
                            "content": "blue"
                        },
                        {
                            "type": "li",
                            "content": "yellow"
                        },
                        {
                            "type": "li",
                            "content": "purple"
                        }
                    ]
                }
            ]
        },
        {
            "name": "Conditionals",
            "blocks": [
                {
                    "type": "h1",
                    "content": "Conditionals"
                },
                { 
                    "type": "p",
                    "content": "Conditionals are statement that check conditions, which can be either true or false, and then do something depending on that state. Sometimes they are referred to as If-Then, Else statements."
                },
                {
                    "type": "code",
                    "content": "if (5 > 0) {\n\t// Do stuff here\n}\n\nif (myAge == 16) {\n\t// Do stuff here\n}\nelse {\n\t// Do stuff here\n}"
                },
                { 
                    "type": "p",
                    "content": "If you want to check multiple conditions after each other, you can use else if. If, else if, and else statements are evaluated in sequential order, so you must be careful. If you have an else or an else if, you must have an if before it, but if you have an if, you do not need anything additional."
                },
                {
                    "type": "code",
                    "content": "if (grade >= 90) {\n\t// Do stuff here\n}\nelse if (grade >= 80) {\n\t// Do stuff here\n}\nelse {\n\t// Do stuff here\n}"
                }
            ]
        },
        {
            "name": "Loops",
            "blocks": [
                {
                    "type": "h1",
                    "content": "Loops"
                },
                {
                    "type": "p",
                    "content": "There are three types of loops."
                },
                {
                    "type": "ol",
                    "blocks": [
                        {
                            "type": "li",
                            "content": "While Loop: This loop initially checks for a condition to be true, and will execute the body until that condition is false."
                        },
                        {
                            "type": "li",
                            "content": "Do-While Loop: This loop will execute the body and then check whether a condition is true or false to execute the body again or exit the loop."
                        },
                        {
                            "type": "li",
                            "content": "For Loop: This loop will execute the body until the counter variable meets a defined condition."
                        }
                    ]
                },
                {
                    "type": "code",
                    "content": "let count = 0;\nwhile (count < 5) {\n\tcount = count + 1;\n}"
                },
                {
                    "type": "p",
                    "content": "A for loop header has the 1. variable initialization, 2. the condition, and 3. the variable mutation."
                },
                {
                    "type": "ol",
                    "blocks": [
                        {
                            "type": "li",
                            "content": "Variable initialization only happens at the first iteration (a.k.a run through) of the loop. It sets up our counter."
                        },
                        {
                            "type": "li",
                            "content": "The condition is checked before every iteration to check if the loop should run or not."
                        },
                        {
                            "type": "li",
                            "content": "The variable is then mutated, you can do any math operation you want to on the variable."
                        }
                    ]
                },
                {
                    "type": "code",
                    "content": "for (let i = 0; i < moz.width; i++) {\n\t// Do stuff here \n}"
                },
                {
                    "type": "p",
                    "content": "You can also put loops inside of other loops, this is called nesting. The inner loops finish first, then goes outwards."
                }
            ]
        },
        {
            "name": "Creating Functions",
            "blocks": [
                {
                    "type": "h1",
                    "content": "Creating Functions"
                },
                {
                    "type": "p",
                    "content": "As previously written, functions are lines of code that have been grouped together and can be called upon by a name. These functions can take inputs called parameters, and can return outputs."
                },
                {
                    "type": "code",
                    "content": "const moz = new Mosaic(5, 5);\n\nfunction drawLine() {\n\tfor (let x = 0; x < moz.width; x++) {\n\t\tmoz.setTileColor(x, 0, \"blue\");\n\t}\n}"
                }
            ]
        }
    ]
}